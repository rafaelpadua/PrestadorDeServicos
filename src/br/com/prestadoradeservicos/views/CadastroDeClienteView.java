/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CadastroDeClienteView.java
 *
 * Created on 24/10/2009, 15:05:57
 */
package br.com.prestadoradeservicos.views;

import br.com.prestadoradeservicos.controlers.CadastroDeClienteControler;
import br.com.prestadoradeservicos.entidades.Cidade;
import br.com.prestadoradeservicos.entidades.Cliente;
import java.util.List;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Anderson Luis Ribeiro
 */
public class CadastroDeClienteView extends javax.swing.JFrame {

    private MaskFormatter formatoCnpj, formatoTelefone;
    private CadastroDeClienteControler controller;

    /** Creates new form CadastroDeClienteView */
    public CadastroDeClienteView(CadastroDeClienteControler controller) {
        criarMascaras();
        initComponents();
        setLocationRelativeTo(null);
        this.controller = controller;
        preencheComboCidade();
        preencheJtable();
        bloquearCampos();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpDadosDoCliente = new javax.swing.JPanel();
        lbNomeCliente = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        lbRazaoSocialCliente = new javax.swing.JLabel();
        txtRazaoSocialCliente = new javax.swing.JTextField();
        lbCnpjCliente = new javax.swing.JLabel();
        try{      formatoCnpj = new MaskFormatter("##.###.###/####-##");  }catch(Exception erro){      JOptionPane.showMessageDialog(null, "Nao foi possivel setar a mascara: " + erro);  }
        txtCnpjCliente = new JFormattedTextField(formatoCnpj);
        lbTelefoneCliente = new javax.swing.JLabel();
        txtTelefoneCliente = new JFormattedTextField(formatoTelefone);
        lbCidadeCliente = new javax.swing.JLabel();
        cbCidadesCliente = new javax.swing.JComboBox();
        lbEnderecoCliente = new javax.swing.JLabel();
        txtEnderecoCliente = new javax.swing.JTextField();
        lbIdentificador = new javax.swing.JLabel();
        txtIdentificador = new javax.swing.JTextField();
        jpDadosDoContato = new javax.swing.JPanel();
        lbNomeContato = new javax.swing.JLabel();
        txtNomeContato = new javax.swing.JTextField();
        lbTelefoneContato = new javax.swing.JLabel();
        txtTelefoneContato = new JFormattedTextField(formatoTelefone);
        lbCelularContato = new javax.swing.JLabel();
        txtCelularContato = new JFormattedTextField(formatoTelefone);
        lbEmailContato = new javax.swing.JLabel();
        txtEmailContato = new javax.swing.JTextField();
        spClientesCadastrados = new javax.swing.JScrollPane();
        jtClientesCadastrados = new javax.swing.JTable();
        lbClientesCadastrados = new javax.swing.JLabel();
        menuPrincipal = new javax.swing.JMenuBar();
        menu = new javax.swing.JMenu();
        miNovo = new javax.swing.JMenuItem();
        miSalvar = new javax.swing.JMenuItem();
        miEditar = new javax.swing.JMenuItem();
        miExcluir = new javax.swing.JMenuItem();
        miSair = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Cliente");

        jpDadosDoCliente.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados do Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        lbNomeCliente.setText("Nome:");

        lbRazaoSocialCliente.setText("Razão Social:");

        lbCnpjCliente.setText("Cnpj:");

        lbTelefoneCliente.setText("Telefone:");

        lbCidadeCliente.setText("Cidade:");

        cbCidadesCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbCidadesCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCidadesClienteActionPerformed(evt);
            }
        });

        lbEnderecoCliente.setText("Endereço:");

        lbIdentificador.setText("Id.:");

        javax.swing.GroupLayout jpDadosDoClienteLayout = new javax.swing.GroupLayout(jpDadosDoCliente);
        jpDadosDoCliente.setLayout(jpDadosDoClienteLayout);
        jpDadosDoClienteLayout.setHorizontalGroup(
            jpDadosDoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDadosDoClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDadosDoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbRazaoSocialCliente)
                    .addComponent(lbNomeCliente)
                    .addComponent(lbCnpjCliente)
                    .addComponent(lbTelefoneCliente)
                    .addComponent(lbCidadeCliente)
                    .addComponent(lbEnderecoCliente)
                    .addComponent(lbIdentificador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpDadosDoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNomeCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                    .addComponent(txtRazaoSocialCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                    .addComponent(txtEnderecoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                    .addComponent(cbCidadesCliente, 0, 286, Short.MAX_VALUE)
                    .addComponent(txtTelefoneCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCnpjCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIdentificador, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jpDadosDoClienteLayout.setVerticalGroup(
            jpDadosDoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDadosDoClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDadosDoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdentificador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbIdentificador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpDadosDoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNomeCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpDadosDoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRazaoSocialCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbRazaoSocialCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpDadosDoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCnpjCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCnpjCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpDadosDoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTelefoneCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTelefoneCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpDadosDoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbCidadesCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCidadeCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpDadosDoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEnderecoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbEnderecoCliente))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jpDadosDoContato.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados do Contato", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        lbNomeContato.setText("Nome:");

        lbTelefoneContato.setText("Telefone:");

        lbCelularContato.setText("Celular:");

        lbEmailContato.setText("E-mail:");

        javax.swing.GroupLayout jpDadosDoContatoLayout = new javax.swing.GroupLayout(jpDadosDoContato);
        jpDadosDoContato.setLayout(jpDadosDoContatoLayout);
        jpDadosDoContatoLayout.setHorizontalGroup(
            jpDadosDoContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDadosDoContatoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDadosDoContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbTelefoneContato)
                    .addComponent(lbNomeContato)
                    .addGroup(jpDadosDoContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lbEmailContato)
                        .addComponent(lbCelularContato)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDadosDoContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNomeContato, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                    .addComponent(txtEmailContato, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                    .addGroup(jpDadosDoContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtCelularContato, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtTelefoneContato, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jpDadosDoContatoLayout.setVerticalGroup(
            jpDadosDoContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDadosDoContatoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDadosDoContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNomeContato)
                    .addComponent(txtNomeContato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpDadosDoContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTelefoneContato)
                    .addComponent(txtTelefoneContato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpDadosDoContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbCelularContato)
                    .addComponent(txtCelularContato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpDadosDoContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbEmailContato)
                    .addComponent(txtEmailContato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(106, Short.MAX_VALUE))
        );

        jtClientesCadastrados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Cnpj", "Telefone", "Contato"
            }
        ));
        jtClientesCadastrados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtClientesCadastradosMouseClicked(evt);
            }
        });
        spClientesCadastrados.setViewportView(jtClientesCadastrados);

        lbClientesCadastrados.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbClientesCadastrados.setText("Clientes Cadastrados:");

        menu.setText("Menu");

        miNovo.setText("Novo");
        miNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miNovoActionPerformed(evt);
            }
        });
        menu.add(miNovo);

        miSalvar.setText("Salvar");
        miSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSalvarActionPerformed(evt);
            }
        });
        menu.add(miSalvar);

        miEditar.setText("Editar");
        miEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miEditarActionPerformed(evt);
            }
        });
        menu.add(miEditar);

        miExcluir.setText("Excluir");
        miExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miExcluirActionPerformed(evt);
            }
        });
        menu.add(miExcluir);

        miSair.setText("Sair");
        miSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSairActionPerformed(evt);
            }
        });
        menu.add(miSair);

        menuPrincipal.add(menu);

        setJMenuBar(menuPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbClientesCadastrados)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(spClientesCadastrados)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jpDadosDoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jpDadosDoContato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jpDadosDoContato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpDadosDoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addComponent(lbClientesCadastrados, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spClientesCadastrados, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSalvarActionPerformed
        controller.salvarCliente();
        preencheJtable();
        bloquearCampos();
    }//GEN-LAST:event_miSalvarActionPerformed

    private void jtClientesCadastradosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtClientesCadastradosMouseClicked
        sincronizarViewComModel((Cliente) jtClientesCadastrados.getValueAt(jtClientesCadastrados.getSelectedRow(), 0));
        bloquearCampos();
    }//GEN-LAST:event_jtClientesCadastradosMouseClicked

    private void miEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miEditarActionPerformed
        desbloquearCampos();
    }//GEN-LAST:event_miEditarActionPerformed

    private void miExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miExcluirActionPerformed
        controller.excluirCliente();
        preencheJtable();
        limparCampos();
    }//GEN-LAST:event_miExcluirActionPerformed

    private void miSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSairActionPerformed
        dispose();
    }//GEN-LAST:event_miSairActionPerformed

    private void miNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miNovoActionPerformed
        limparCampos();
        desbloquearCampos();
    }//GEN-LAST:event_miNovoActionPerformed

    private void cbCidadesClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCidadesClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCidadesClienteActionPerformed
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new CadastroDeClienteView().setVisible(true);
//            }
//        });
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbCidadesCliente;
    private javax.swing.JPanel jpDadosDoCliente;
    private javax.swing.JPanel jpDadosDoContato;
    private javax.swing.JTable jtClientesCadastrados;
    private javax.swing.JLabel lbCelularContato;
    private javax.swing.JLabel lbCidadeCliente;
    private javax.swing.JLabel lbClientesCadastrados;
    private javax.swing.JLabel lbCnpjCliente;
    private javax.swing.JLabel lbEmailContato;
    private javax.swing.JLabel lbEnderecoCliente;
    private javax.swing.JLabel lbIdentificador;
    private javax.swing.JLabel lbNomeCliente;
    private javax.swing.JLabel lbNomeContato;
    private javax.swing.JLabel lbRazaoSocialCliente;
    private javax.swing.JLabel lbTelefoneCliente;
    private javax.swing.JLabel lbTelefoneContato;
    private javax.swing.JMenu menu;
    private javax.swing.JMenuBar menuPrincipal;
    private javax.swing.JMenuItem miEditar;
    private javax.swing.JMenuItem miExcluir;
    private javax.swing.JMenuItem miNovo;
    private javax.swing.JMenuItem miSair;
    private javax.swing.JMenuItem miSalvar;
    private javax.swing.JScrollPane spClientesCadastrados;
    private javax.swing.JTextField txtCelularContato;
    private javax.swing.JTextField txtCnpjCliente;
    private javax.swing.JTextField txtEmailContato;
    private javax.swing.JTextField txtEnderecoCliente;
    private javax.swing.JTextField txtIdentificador;
    private javax.swing.JTextField txtNomeCliente;
    private javax.swing.JTextField txtNomeContato;
    private javax.swing.JTextField txtRazaoSocialCliente;
    private javax.swing.JTextField txtTelefoneCliente;
    private javax.swing.JTextField txtTelefoneContato;
    // End of variables declaration//GEN-END:variables

    /**
     * Preenche o combo de cidades com as cidades cadastradas
     */
    public void preencheComboCidade() {

        cbCidadesCliente.removeAllItems();
        List<Cidade> lista = controller.listarCidades();
        for (Cidade cidade : lista) {
            cbCidadesCliente.addItem(cidade);
        }

    }

    /**
     * Sincronização da camada de modelo com a visão
     */
    public void sincronizarModelComView(Cliente model) {

        if (!txtIdentificador.getText().equals("")) {
            model.setId(Integer.parseInt(txtIdentificador.getText()));
        } else {
            model.setId(null);
        }

        if (!txtNomeCliente.getText().equals("")) {
            model.setNome(txtNomeCliente.getText());
        } else {
            JOptionPane.showMessageDialog(null, "O nome do cliente é obrigatório");
        }

        if (!txtRazaoSocialCliente.getText().equals("")) {
            model.setRazaoSocial(txtRazaoSocialCliente.getText());
        } else {
            JOptionPane.showMessageDialog(null, "A ração social é obrigatória");
        }

        if (!txtCnpjCliente.getText().equals("")) {
            model.setCnpj(txtCnpjCliente.getText());
        } else {
            JOptionPane.showMessageDialog(null, "O cnpj é obrigatório");
        }

        if (!txtTelefoneCliente.getText().equals("")) {
            model.setTelefone(txtTelefoneCliente.getText());
        } else {
            JOptionPane.showMessageDialog(null, "O telefone do cliente é obrigatório");
        }


        model.setCidade((Cidade) cbCidadesCliente.getSelectedItem());


        if (!txtEnderecoCliente.getText().equals("")) {
            model.setEndereco(txtEnderecoCliente.getText());
        } else {
            JOptionPane.showMessageDialog(null, "O endereço é obrigatório");
        }

        if (!txtNomeContato.getText().equals("")) {
            model.setContato(txtNomeContato.getText());
        } else {
            JOptionPane.showMessageDialog(null, "O nome do contato é obrigatório");
        }

        if (!txtTelefoneContato.getText().equals("")) {
            model.setTelefoneDoContato(txtTelefoneContato.getText());
        } else {
            JOptionPane.showMessageDialog(null, "O telefone do contato é obrigatório");
        }

        if (!txtCelularContato.getText().equals("")) {
            model.setCelularDoContato(txtCelularContato.getText());
        }

        if (!txtEmailContato.getText().equals("")) {
            model.setEmailDoContato(txtEmailContato.getText());
        }
    }

    /**
     * Bloquea os campos do formulário para edição
     */
    public void bloquearCampos() {

        txtIdentificador.setEditable(false);
        txtNomeCliente.setEditable(false);
        txtRazaoSocialCliente.setEditable(false);
        txtCnpjCliente.setEditable(false);
        txtTelefoneCliente.setEditable(false);
        cbCidadesCliente.setEditable(false);
        txtEnderecoCliente.setEditable(false);
        txtNomeContato.setEditable(false);
        txtTelefoneContato.setEditable(false);
        txtCelularContato.setEditable(false);
        txtEmailContato.setEditable(false);
    }

    /**
     * Desbloqueia os campos do formulário para edição
     */
    public void desbloquearCampos() {

        txtNomeCliente.setEditable(true);
        txtRazaoSocialCliente.setEditable(true);
        txtCnpjCliente.setEditable(true);
        txtTelefoneCliente.setEditable(true);
        cbCidadesCliente.setEditable(true);
        txtEnderecoCliente.setEditable(true);
        txtNomeContato.setEditable(true);
        txtTelefoneContato.setEditable(true);
        txtCelularContato.setEditable(true);
        txtEmailContato.setEditable(true);
    }

    /**
     * Preenche as o jtable com os clientes cadastrados
     */
    public void preencheJtable() {

        jtClientesCadastrados.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jtClientesCadastrados.getColumn("Nome").setPreferredWidth(270);
        jtClientesCadastrados.getColumn("Cnpj").setPreferredWidth(130);
        jtClientesCadastrados.getColumn("Telefone").setPreferredWidth(100);
        jtClientesCadastrados.getColumn("Contato").setPreferredWidth(270);


        List<Cliente> lista = controller.listarClientes();

        DefaultTableModel modelo = (DefaultTableModel) jtClientesCadastrados.getModel();

        for (int i = (modelo.getRowCount() - 1); i >= 0; --i) {
            modelo.removeRow(i);
        }

        for (Cliente objeto : lista) {

            modelo.addRow(new Object[]{objeto.getNome(), objeto.getCnpj(), objeto.getTelefone(), objeto.getContato()});

        }

    }

    /**
     * Sincroniza a camada de visão com o modelo
     */
    public void sincronizarViewComModel(Cliente model) {

        if (model.getId() != null) {
            txtIdentificador.setText(model.getId().toString());
        }

        if (model.getNome() != null) {
            txtNomeCliente.setText(model.getNome());
        }

        if (model.getRazaoSocial() != null) {
            txtRazaoSocialCliente.setText(model.getRazaoSocial());
        }

        if (model.getCnpj() != null) {
            txtCnpjCliente.setText(model.getCnpj());
        }

        if (model.getTelefone() != null) {
            txtTelefoneCliente.setText(model.getTelefone());
        }

        if (model.getCidade() != null) {
            cbCidadesCliente.setSelectedItem(model.getCidade());
        }

        if (model.getEndereco() != null) {
            txtEnderecoCliente.setText(model.getEndereco());
        }

        if (model.getContato() != null) {
            txtNomeContato.setText(model.getContato());
        }

        if (model.getTelefoneDoContato() != null) {
            txtTelefoneContato.setText(model.getTelefoneDoContato());
        }

        if (model.getCelularDoContato() != null) {
            txtCelularContato.setText(model.getCelularDoContato());
        }

        if (model.getEmailDoContato() != null) {
            txtEmailContato.setText(model.getEmailDoContato());
        }

    }

    /**
     * Limpa os campos do formulário
     */
    public void limparCampos() {

        txtIdentificador.setText("");
        txtNomeCliente.setText("");
        txtRazaoSocialCliente.setText("");
        txtCnpjCliente.setText("");
        txtTelefoneCliente.setText("");
        cbCidadesCliente.setSelectedItem("");
        txtEnderecoCliente.setText("");
        txtNomeContato.setText("");
        txtTelefoneContato.setText("");
        txtCelularContato.setText("");
        txtEmailContato.setText("");

    }

    public void criarMascaras() {
        try {
            formatoTelefone = new MaskFormatter("(###)####-####");
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Nao foi possivel setar a mascara: " + erro);
        }
    }
}
