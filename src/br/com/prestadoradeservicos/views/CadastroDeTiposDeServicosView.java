/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CadastroDeCliente.java
 *
 * Created on 24/10/2009, 14:28:23
 */

package br.com.prestadoradeservicos.views;

import br.com.prestadoradeservicos.controlers.CadastroDeTiposDeServicoControler;
import br.com.prestadoradeservicos.entidades.TipoDeServico;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Anderson Luis Ribeiro
 */
public class CadastroDeTiposDeServicosView extends javax.swing.JFrame {

    private CadastroDeTiposDeServicoControler controller;
    /** Creates new form CadastroDeCliente */
    public CadastroDeTiposDeServicosView(CadastroDeTiposDeServicoControler controller) {
        initComponents();
        setLocationRelativeTo(null);
        this.controller = controller;
        bloquearCampos();
        preencheJtable();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jpDadosDoTipoDeServico = new javax.swing.JPanel();
        lbCodigo = new javax.swing.JLabel();
        txtIdentificador = new javax.swing.JTextField();
        lbDescricao = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        spTiposDeServicoCadastrados = new javax.swing.JScrollPane();
        jtTiposDeServicoCadastrados = new javax.swing.JTable();
        lbTiposDeServicoCadastrado = new javax.swing.JLabel();
        menuPricipal = new javax.swing.JMenuBar();
        menu = new javax.swing.JMenu();
        miNovo = new javax.swing.JMenuItem();
        miSalvar = new javax.swing.JMenuItem();
        miEditar = new javax.swing.JMenuItem();
        miExcluir = new javax.swing.JMenuItem();
        miSair = new javax.swing.JMenuItem();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Tipos de Serviços");

        jpDadosDoTipoDeServico.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados do Tipo de Serviço", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        lbCodigo.setText("Id.:");

        lbDescricao.setText("Descrição");

        javax.swing.GroupLayout jpDadosDoTipoDeServicoLayout = new javax.swing.GroupLayout(jpDadosDoTipoDeServico);
        jpDadosDoTipoDeServico.setLayout(jpDadosDoTipoDeServicoLayout);
        jpDadosDoTipoDeServicoLayout.setHorizontalGroup(
            jpDadosDoTipoDeServicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDadosDoTipoDeServicoLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jpDadosDoTipoDeServicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbDescricao)
                    .addComponent(lbCodigo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpDadosDoTipoDeServicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                    .addComponent(txtIdentificador, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jpDadosDoTipoDeServicoLayout.setVerticalGroup(
            jpDadosDoTipoDeServicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDadosDoTipoDeServicoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDadosDoTipoDeServicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdentificador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCodigo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpDadosDoTipoDeServicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbDescricao))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jtTiposDeServicoCadastrados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Id", "Descricao"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtTiposDeServicoCadastrados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtTiposDeServicoCadastradosMouseClicked(evt);
            }
        });
        spTiposDeServicoCadastrados.setViewportView(jtTiposDeServicoCadastrados);
        jtTiposDeServicoCadastrados.getColumnModel().getColumn(0).setResizable(false);
        jtTiposDeServicoCadastrados.getColumnModel().getColumn(0).setPreferredWidth(1);
        jtTiposDeServicoCadastrados.getColumnModel().getColumn(1).setResizable(false);
        jtTiposDeServicoCadastrados.getColumnModel().getColumn(1).setPreferredWidth(2);

        lbTiposDeServicoCadastrado.setFont(new java.awt.Font("Tahoma", 1, 14));
        lbTiposDeServicoCadastrado.setText("Tipos de Serviços Cadastrados:");

        menu.setText("Menu");

        miNovo.setText("Novo");
        miNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miNovoActionPerformed(evt);
            }
        });
        menu.add(miNovo);

        miSalvar.setText("Salvar");
        miSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSalvarActionPerformed(evt);
            }
        });
        menu.add(miSalvar);

        miEditar.setText("Editar");
        miEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miEditarActionPerformed(evt);
            }
        });
        menu.add(miEditar);

        miExcluir.setText("Excluir");
        miExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miExcluirActionPerformed(evt);
            }
        });
        menu.add(miExcluir);

        miSair.setText("Sair");
        miSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSairActionPerformed(evt);
            }
        });
        menu.add(miSair);

        menuPricipal.add(menu);

        setJMenuBar(menuPricipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpDadosDoTipoDeServico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(spTiposDeServicoCadastrados, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
                    .addComponent(lbTiposDeServicoCadastrado))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpDadosDoTipoDeServico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lbTiposDeServicoCadastrado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spTiposDeServicoCadastrados, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSalvarActionPerformed
        controller.salvarTipoDeServico();
        preencheJtable();
        bloquearCampos();
    }//GEN-LAST:event_miSalvarActionPerformed

    private void miEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miEditarActionPerformed
        desbloquearCampos();
    }//GEN-LAST:event_miEditarActionPerformed

    private void jtTiposDeServicoCadastradosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtTiposDeServicoCadastradosMouseClicked
        sincronizarViewComModel((TipoDeServico)jtTiposDeServicoCadastrados.getValueAt(jtTiposDeServicoCadastrados.getSelectedRow(),1));
        bloquearCampos();
    }//GEN-LAST:event_jtTiposDeServicoCadastradosMouseClicked

    private void miExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miExcluirActionPerformed
        controller.excluirTipoDeServico();
        limparCampos();
        preencheJtable();
    }//GEN-LAST:event_miExcluirActionPerformed

    private void miSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSairActionPerformed
        dispose();
    }//GEN-LAST:event_miSairActionPerformed

    private void miNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miNovoActionPerformed
        limparCampos();
        desbloquearCampos();
    }//GEN-LAST:event_miNovoActionPerformed

    /**
    * @param args the command line arguments
    */
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new CadastroDeTiposDeServicosView().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel jpDadosDoTipoDeServico;
    private javax.swing.JTable jtTiposDeServicoCadastrados;
    private javax.swing.JLabel lbCodigo;
    private javax.swing.JLabel lbDescricao;
    private javax.swing.JLabel lbTiposDeServicoCadastrado;
    private javax.swing.JMenu menu;
    private javax.swing.JMenuBar menuPricipal;
    private javax.swing.JMenuItem miEditar;
    private javax.swing.JMenuItem miExcluir;
    private javax.swing.JMenuItem miNovo;
    private javax.swing.JMenuItem miSair;
    private javax.swing.JMenuItem miSalvar;
    private javax.swing.JScrollPane spTiposDeServicoCadastrados;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtIdentificador;
    // End of variables declaration//GEN-END:variables

    /**
     * Sincroniza a camada de modelo com a visão
     */
    public void sincronizarModelComView(TipoDeServico model){

        if(!txtIdentificador.getText().equals("")){
            model.setId(Integer.parseInt(txtIdentificador.getText()));
        }else{
            model.setId(null);
        }

        if(!txtDescricao.getText().equals("")){
            model.setDescricao(txtDescricao.getText());
        }else{
            JOptionPane.showMessageDialog(null, "A descrição é obrigatória");
        }
    }

    /**
     * Sincroniza a camada de visão com o modelo
     */
    public void sincronizarViewComModel(TipoDeServico model){

        if(model.getId() != null){
            txtIdentificador.setText(model.getId().toString());
        }

        if(model.getDescricao() != null){
            txtDescricao.setText(model.getDescricao());
        }
    }

    /**
     * Bloquea os campos do formulário
     */
    public void bloquearCampos(){

        txtIdentificador.setEditable(false);
        txtDescricao.setEditable(false);

    }

    /**
     * Desbloquea os campos do formulário
     */
    public void desbloquearCampos(){
       
        txtDescricao.setEditable(true);

    }

    /**
     * Limpa os campos do formulario
     */
    public void limparCampos(){

        txtIdentificador.setText("");
        txtDescricao.setText("");

    }

    /**
     * Preenche a tabela com os tipos de serviço cadastrados
     */
    public void preencheJtable(){

        jtTiposDeServicoCadastrados.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jtTiposDeServicoCadastrados.getColumn("Id").setPreferredWidth(60);
        jtTiposDeServicoCadastrados.getColumn("Descricao").setPreferredWidth(335);

        List<TipoDeServico> lista = controller.listarTiposDeServico();

        DefaultTableModel modelo = (DefaultTableModel) jtTiposDeServicoCadastrados.getModel();

        for(int i = (modelo.getRowCount() - 1); i >= 0; --i) {
            modelo.removeRow(i);
        }

        for(TipoDeServico objeto : lista){

            modelo.addRow(new Object[]{objeto.getId(),objeto});

        }

    }
}
